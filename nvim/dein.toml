#[[plugins]]
#repo = 'vim-denops/denops.vim'

#[[plugins]]
#repo = 'Shougo/ddc.vim'
#on_event = 'InsertEnter'
#depends = ['denops.vim']
#hook_post_source = '''
  #"call ddc#custom#patch_global('sources', ['nvim-lsp', 'around', 'vsnip'])
  #call ddc#custom#patch_global('sources', ['around'])
  #call ddc#custom#patch_global('sourceOptions', {
    #\ '_': {
    #\   'matchers': ['matcher_head', 'matcher_fuzzy'],
    #\   'sorters': ['sorter_rank', 'sorter_fuzzy'],
    #\   'converters': ['converter_remove_overlap', 'converter_fuzzy'],
    #\ },
    #\ 'around': {'mark': 'A'},
    #\ 'nvim-lsp': {
    #\   'mark': 'LSP',
    #\   'forceCompletionPattern': '\.\w*|:\w*|->\w*',
    #\ },
    #\ })

  #call ddc#custom#patch_global('sourceParams', {
    #\ 'around': {'maxSize': 500},
    #\ 'nvim-lsp': { 'kindLabels': { 'Class': 'c' } },
    #\ })

  #inoremap <silent><expr> <TAB>
    #\ ddc#map#pum_visible() ? '<C-n>' :
    #\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
    #\ '<TAB>' : ddc#map#manual_complete()
  #inoremap <expr><S-TAB>  ddc#map#pum_visible() ? '<C-p>' : '<C-h>'

  #call ddc#enable()
#'''



#[[plugins]]
#repo = 'nvim-lua/plenary.nvim'

#[[plugins]]
#repo = 'jose-elias-alvarez/null-ls.nvim'
#depends = ['plenary.nvim']
#hook_add = '''
#lua << EOF
    #local null_ls = require "null-ls"
    #null_ls.setup {
        #sources = {
            #null_ls.builtins.formatting.prettier.with {
                #prefer_local = "node_modules/.bin",
            #},
        #},
        #on_attach = function(client, bufnr)
            #if client.server_capabilities.documentFormattingProvider then
                #vim.cmd("nnoremap <silent><buffer> <Leader>f :lua vim.lsp.buf.formatting()<CR>")

                #-- format on save
                #vim.cmd("autocmd BufWritePost <buffer> lua vim.lsp.buf.formatting()")
            #end

            #if client.server_capabilities.documentRangeFormattingProvider then
                #vim.cmd("xnoremap <silent><buffer> <Leader>f :lua vim.lsp.buf.range_formatting({})<CR>")
            #end
        #end,
    #}
#EOF
#'''

#[[plugins]]
#repo = 'hrsh7th/vim-vsnip-integ'

#[[plugins]]
#repo = 'rafamadriz/friendly-snippets'



#[[plugins]]
#repo = 'Shougo/pum.vim'

#[[plugins]]
#repo = 'osyo-manga/vim-precious'

#[[plugins]]
#repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'scrooloose/nerdcommenter'

#[[plugins]]
#repo = 'cohama/lexima.vim'

#[[plugins]]
#repo = 'machakann/vim-sandwich'

#[[plugins]]
#repo = 'tpope/vim-fugitive'

#[[plugins]]
#repo = 'Yggdroot/indentLine'

#[[plugins]]
#repo = 'vim-airline/vim-airline'

#[[plugins]]
#repo = 'wellle/targets.vim'

#[[plugins]]
#repo = 'tpope/vim-markdown'

[[plugins]]
repo = 'phaazon/hop.nvim'
hook_add = '''
  let g:mapleader = ","
  nnoremap <Leader>c :<C-u>HopChar2<CR>
  nnoremap <Leader>w :<C-u>HopWord<CR>
  nnoremap <Leader>l :<C-u>HopLine<CR>
  nnoremap <Leader>/ :<C-u>HopPattern<CR>
  lua require'hop'.setup()
'''

#[[plugins]]
#repo = 'alvan/vim-closetag'
#hook_add = '''
  #let g:closetag_filenames = '*.html,*.xhtml,*.phtml'
  #let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'
  #let g:closetag_filetypes = 'html,xhtml,phtml'
  #let g:closetag_xhtml_filetypes = 'xhtml,jsx'
  #let g:closetag_emptyTags_caseSensitive = 1
  #let g:closetag_shortcut = '>'
  #let g:closetag_close_shortcut = '<leader>>'
#'''

#[[plugins]]
#repo = 'dense-analysis/ale'
#hook_add = '''
  #let g:ale_sign_column_always = 1
  #let g:ale_sign_error = '✗'
  #let g:ale_sign_warning = '⚠'
  #let g:ale_fix_on_save = 1
  #let g:ale_fixers = {
  #\ 'rust': ['rustfmt'],
  #\ 'python': ['black'],
  #\ }
  #let g:ale_linters = {
  #\ 'cpp': ['cppcheck', 'clangtidy'],
  #\ 'python': ['flake8'],
  #\ }
#'''

#[[plugins]]
#repo = 'airblade/vim-gitgutter'

#[[plugins]]
#repo = 'lambdalisue/fern.vim'
#rev = 'main'
#hook_add = '''
  #nnoremap fern :<C-u>Fern . -reveal=% -drawer<CR>
#'''

#[[plugins]]
#repo = 'lambdalisue/fern-git-status.vim'

#[[plugins]]
#repo = 'lambdalisue/nerdfont.vim'

#[[plugins]]
#repo = 'lambdalisue/fern-renderer-nerdfont.vim'
#hook_add = '''
  #let g:fern#renderer = 'nerdfont'
#'''

#[[plugins]]
#repo = 'lambdalisue/glyph-palette.vim'
#hook_add = '''
  #augroup my-glyph-palette
    #autocmd! *
    #autocmd FileType fern call glyph_palette#apply()
    #autocmd FileType nerdtree,startify call glyph_palette#apply()
  #augroup END
#'''

[[plugins]]
repo = 'yuki-yano/fzf-preview.vim'
rev = 'release/remote'
depends=['junegunn/fzf']

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
  command! -bang -nargs=* Rg
    \ call fzf#vim#grep(
    \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
    \   fzf#vim#with_preview({'options': '--exact --reverse'}, 'right:50%:wrap'))
'''

[[plugins]]
repo = 'gfanto/fzf-lsp.nvim'
depends=['junegunn/fzf.vim']
merged = '0'
hook_post_source = '''
  lua require'fzf_lsp'.setup()
  function! GetCurWordDef() abort
      let word = expand('<cword>')
      execute 'WorkspaceSymbols'
      call feedkeys('', 'n')
      call feedkeys('' . word)
  endfunction
  nnoremap <C-g> :call GetCurWordDef()<CR>
'''

[[plugins]]
repo = 'github/copilot.vim'

#[[plugins]]
#repo = 'jremmen/vim-ripgrep'

#[[plugins]]
#repo = 'kassio/neoterm'
#hook_add = '''
  #nnoremap tm :<C-u>Ttoggle<CR>
  #tnoremap tm <C-\><C-n>:<C-u>Ttoggle<CR>
  #let g:neoterm_autoinsert = 1
  #let g:neoterm_autoscroll = 1
  #let g:neoterm_default_mod = "belowright"
#'''
